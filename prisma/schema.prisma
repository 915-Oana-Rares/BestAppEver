// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comic {
  name          String          @id
  publisher     String
  writer        String
  UserComic     UserComic[]
  UserOperation UserOperation[]

  @@index([publisher])
  @@index([writer])
}

model User {
  id       String @id
  name     String
  email    String @unique
  password String

  UserComic UserComic[]
  Admin     Admin?

  UserOperation UserOperation[]

  SuspiciousUser SuspiciousUser[]
}

model Admin {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model SuspiciousUser{
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model UserOperation {
  id        String @id @default(cuid())
  userId    String
  comicName String
  operation String
  date     DateTime @default(now())
  user      User   @relation(fields: [userId], references: [id])
  comic     Comic  @relation(fields: [comicName], references: [name])

  @@index([userId])
  @@index([comicName])
}

model UserComic {
  id        String @id @default(cuid())
  userId    String
  comicName String
  comic     Comic  @relation(fields: [comicName], references: [name])
  user      User   @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([comicName])
}
